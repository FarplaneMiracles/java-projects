sleepIn:

public boolean sleepIn(boolean weekday, boolean vacation) {
   if(weekday == false && vacation == true){
     return true;
   } 
   else if(weekday == true && vacation == true){
     return true;
   }
   else if(weekday == false && vacation == false){
     return true;
   }else {
     return false;
   } 
   
}

monkeytrouble:

public boolean monkeyTrouble(boolean aSmile, boolean bSmile) {
  
  if(aSmile == true && bSmile == true){
     return true;
   } 
   else if(aSmile == false && bSmile == false){
     return true;
   }
   else if(aSmile == true && bSmile == false){
     return false;
   }else {
     return false;
   } 
}

sumDouble:

public int sumDouble(int a, int b) {
  if(a != b){
    return a + b;
  } else{
    return (a + b) * 2;
  }
}

diff21:
public int diff21(int n) {
  if(n > 21){
    return Math.abs(n - 21) * 2;
  } else{
    return Math.abs(n - 21); 
  }
}

ParrotTrouble:

public boolean parrotTrouble(boolean talking, int hour) {
  if(talking == true && hour < 7){
    return true;
  }
  else if(talking == true && hour > 20){
    return true;
  }else{
    return false;
  }
}

makes10:

public boolean makes10(int a, int b) {
  if(a == 10 || b == 10){
    return true;
  }
  else if((a + b) == 10){
    return true;
  } else{
    return false;
  }
}


nearHundred: 

public boolean nearHundred(int n) {
  return ((Math.abs(100 - n) <= 10) ||
    (Math.abs(200 - n) <= 10));
}

posNeg:

public boolean posNeg(int a, int b, boolean negative) {
  if (negative) {
    return (a < 0 && b < 0);
  }
  else {
    return ((a < 0 && b > 0) || (a > 0 && b < 0));
  }
}

NotString:

public String notString(String str) {
  if (str.length() >= 3 && str.substring(0, 3).equals("not")) {
    return str;
  }
  
  return "not " + str;
}
